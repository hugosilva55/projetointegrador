
package br.com.Telas;

import br.com.DAO.ResultadoFinalDAO;
import br.com.Modelos.ResultadoFinal;
import br.com.Modelos.ResultadoFinalTableModel;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author hugo
 */
public class ListarPorAnoCurso extends javax.swing.JFrame {

    ResultadoFinal resultadoFinal = new ResultadoFinal();
    ResultadoFinalDAO resultadoFinalDAO = new ResultadoFinalDAO();
    ResultadoFinalTableModel modeloTabela;

    String ano;
    String curso;

    /**
     * Creates new form Tela_Ordenacao
     */
    public ListarPorAnoCurso() {
        initComponents();
        modeloTabela = new ResultadoFinalTableModel(resultadoFinalDAO.listarResultadoFinal());
        TabelaResultado.setModel(modeloTabela);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaResultado = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcbCurso = new javax.swing.JComboBox<>();
        btnPesquisar = new javax.swing.JButton();
        txAno = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(235, 235, 235));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/logo pequena.png"))); // NOI18N
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 11, 393, 72));

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("X");
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 11, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBorder(null);

        TabelaResultado.setAutoCreateRowSorter(true);
        TabelaResultado.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        TabelaResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Participante", "Nota", "Classificação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaResultado.setGridColor(new java.awt.Color(255, 255, 255));
        TabelaResultado.setIntercellSpacing(new java.awt.Dimension(5, 5));
        TabelaResultado.setRowHeight(30);
        TabelaResultado.setSelectionBackground(new java.awt.Color(0, 1, 76));
        jScrollPane1.setViewportView(TabelaResultado);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 730, 260));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 1, 76));
        jLabel4.setText("Pesquisar por Ano e Curso");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, 27));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Ano Letivo:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, -1, 30));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Curso:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, -1, 30));

        jcbCurso.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcbCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administração", "Analise e Desenvolvimento de Sistemas", "Ciências Contábeis", "Direito", "Educação Fisica", "Enfermagem", "Fisioterapia", "Psicologia", "Serviço Social" }));
        jPanel2.add(jcbCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 190, 30));

        btnPesquisar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnPesquisar.setForeground(new java.awt.Color(0, 1, 76));
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        jPanel2.add(btnPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 90, 100, 30));

        try {
            txAno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####.#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txAnoActionPerformed(evt);
            }
        });
        txAno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txAnoKeyTyped(evt);
            }
        });
        jPanel2.add(txAno, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 110, 30));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/pdf.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 20, 40, -1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 791, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed

        //Recuperar valores
        String AnoLetivo = txAno.getText();
        String curso = jcbCurso.getSelectedItem().toString();
        atualizarTabela(AnoLetivo, curso);
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        Main main = new Main();
        main.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel12MouseClicked

    private void txAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txAnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txAnoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String AnoLetivo = txAno.getText();
        String curso = jcbCurso.getSelectedItem().toString();
        
        if(AnoLetivo == null || curso == null){
            JOptionPane.showMessageDialog(null, "Ano e Curso não Especificado!!!");
        }else{            
           int count = resultadoFinalDAO.contarResultadoPorCurso(AnoLetivo, curso);
           
            if (count<=0) {
                JOptionPane.showMessageDialog(null, "Não há nenhum dado registrado com esse Ano e Curso.!!!");
            }else{
                
                
            Document document = null;
            OutputStream stream = null;

            try {
                       
                document = new Document(PageSize.A4, 30, 20, 20, 30);
                stream = new FileOutputStream(curso+ " - "+ AnoLetivo+".pdf");

                try {
                    PdfWriter.getInstance(document, stream);
                    document.open();

                    Font font = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);
                    Font fontBold = new Font(Font.FontFamily.TIMES_ROMAN, 14, Font.BOLD);

                    Image image = Image.getInstance("logo.png");
                    image.setAlignment(Element.ALIGN_CENTER);
                    document.add(image);

                    Paragraph cabecalho = new Paragraph("PROCESSO DE SELEÇÃO DE ALUNOS", font);
                    cabecalho.setAlignment(Element.ALIGN_CENTER);
                    document.add(cabecalho);

                    Paragraph p1 = new Paragraph(curso, font);
                    p1.setAlignment(Element.ALIGN_CENTER);
                    document.add(p1);

                    Paragraph p2 = new Paragraph("Ano Seletivo " + AnoLetivo, font);
                    p2.setAlignment(Element.ALIGN_CENTER);
                    document.add(p2);

                    //Espaçamentos//
                    Paragraph q1 = new Paragraph(" ");
                    cabecalho.setAlignment(Element.ALIGN_CENTER);
                    document.add(q1);
                    Paragraph q2 = new Paragraph(" ");
                    cabecalho.setAlignment(Element.ALIGN_CENTER);
                    document.add(q2);
                    Paragraph q3 = new Paragraph(" ");
                    cabecalho.setAlignment(Element.ALIGN_CENTER);
                    document.add(q3);
                    ////Espaçamentos//

                    Paragraph participante = new Paragraph("Participante", fontBold);
                    Paragraph nota = new Paragraph("Nota", fontBold);
                    Paragraph classificacao = new Paragraph("Classificação", fontBold);

                    PdfPTable title = new PdfPTable(3);
                    title.setWidthPercentage(100);
                    title.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
                    title.getDefaultCell().setVerticalAlignment(Element.ALIGN_MIDDLE);
                    title.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
                    title.getDefaultCell().setBorderWidthBottom(1);
                    title.getDefaultCell().setFixedHeight(30);
                    title.addCell(participante);
                    title.addCell(nota);
                    title.addCell(classificacao);
                    document.add(title);

                    for (ResultadoFinal rf : resultadoFinalDAO.listarResultadoPorCurso(AnoLetivo, curso)) {
                       
                        PdfPTable tabela = new PdfPTable(3);
                        tabela.setWidthPercentage(100);
                        tabela.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
                        tabela.getDefaultCell().setVerticalAlignment(Element.ALIGN_MIDDLE);
                        tabela.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
                        tabela.addCell(rf.getNomeParticipante());
                        tabela.addCell(String.valueOf(rf.getNotaFinal()));
                        tabela.addCell(rf.getClassificacao());
                        document.add(tabela);

                    }

                } catch (DocumentException ex) {
                    Logger.getLogger(ListarPorAnoCurso.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(ListarPorAnoCurso.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ListarPorAnoCurso.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                if (document != null) {
                    JOptionPane.showMessageDialog(null, "Arquivo exportado com Sucesso!!!");
                    document.close();
                }
            }                
            }      
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txAnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txAnoKeyTyped
        
        int ascii = evt.getKeyChar();
        if(!(ascii >= 48 && ascii <= 57) && !(ascii == evt.VK_BACK_SPACE)){
            evt.consume();
        }
        if(txAno.getText().length() >= 5){
            evt.consume();
        }
                
                
    }//GEN-LAST:event_txAnoKeyTyped


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws BadElementException, FileNotFoundException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListarPorAnoCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListarPorAnoCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListarPorAnoCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListarPorAnoCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListarPorAnoCurso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelaResultado;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcbCurso;
    private javax.swing.JFormattedTextField txAno;
    // End of variables declaration//GEN-END:variables

    public void atualizarTabela(String ano, String curso) {
        modeloTabela = new ResultadoFinalTableModel(resultadoFinalDAO.listarResultadoPorCurso(ano, curso));
        TabelaResultado.setModel(modeloTabela);
    }

}
